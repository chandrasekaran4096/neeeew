package com.bite.controller;
import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.annotation.*;
import java.io.*;
import com.bite.service.UserService;
import com.google.gson.Gson;
import com.bite.model.User;
import com.bite.model.ResponseMessage;


public class UserServlet extends HttpServlet {

    private UserService userService;
    private Gson gson = new Gson();
    @Override
    public void init() {
        userService = new UserService();
    }
    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException {
        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");
        PrintWriter out = response.getWriter();
        String action = request.getParameter("action");
        ResponseMessage<?> resp;

        try {
            if("register".equalsIgnoreCase(action)) {
                String name = request.getParameter("name");
                String email = request.getParameter("email");
                String phone = request.getParameter("phonenumber");
                String address = request.getParameter("address");
                String password = request.getParameter("password");
                String role = request.getParameter("role");

                resp = userService.registerUser(name, email, phone, address, password, role);

            } else if("login".equalsIgnoreCase(action)) {
                String email = request.getParameter("email");
                String password = request.getParameter("password");
                User user = userService.loginUser(email, password);
                if(user != null) {
                    HttpSession session = request.getSession();
                    session.setAttribute("user", user);
                    String redirectPage = "restaurant.html";
                    if("admin".equalsIgnoreCase(user.getRole())) {
                    	redirectPage = "admin.html";
                    }
                    else if("restaurant".equalsIgnoreCase(user.getRole())) {
                    	redirectPage = "restaurantowner.html";
                    }

                    resp = new ResponseMessage<>("success", "Login successful", redirectPage, user);
                }
                else {
                    resp = new ResponseMessage<>("error", "Invalid credentials");
                }
            }
            else {
                resp = new ResponseMessage<>("error", "Invalid action");
            }
        } catch(Exception e) {
            e.printStackTrace();
            resp = new ResponseMessage<>("error", "Server error: " + e.getMessage());
        }
        out.print(gson.toJson(resp));
        out.flush();
    }
}


from front end user clicks logout button we should log out so use this servlet update it give that front end also




Perfect üëç ‚Äî let‚Äôs **add logout functionality** to your existing `UserServlet` and also provide a **front-end example** (button + JS) that correctly logs out the user.

---

## ‚úÖ Updated `UserServlet.java`

Here‚Äôs the **complete servlet** with **logout support** added (clean, compact, and matches your project style):

```java
package com.bite.controller;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.annotation.*;
import java.io.*;
import com.bite.service.UserService;
import com.google.gson.Gson;
import com.bite.model.User;
import com.bite.model.ResponseMessage;

@WebServlet("/user")
public class UserServlet extends HttpServlet {

    private UserService userService;
    private final Gson gson = new Gson();

    @Override
    public void init() {
        userService = new UserService();
    }

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws IOException {
        response.setContentType("application/json");
        response.setCharacterEncoding("UTF-8");
        PrintWriter out = response.getWriter();
        String action = request.getParameter("action");
        ResponseMessage<?> resp;

        try {
            if ("register".equalsIgnoreCase(action)) {
                String name = request.getParameter("name");
                String email = request.getParameter("email");
                String phone = request.getParameter("phonenumber");
                String address = request.getParameter("address");
                String password = request.getParameter("password");
                String role = request.getParameter("role");

                resp = userService.registerUser(name, email, phone, address, password, role);

            } else if ("login".equalsIgnoreCase(action)) {
                String email = request.getParameter("email");
                String password = request.getParameter("password");
                User user = userService.loginUser(email, password);

                if (user != null) {
                    HttpSession session = request.getSession();
                    session.setAttribute("user", user);

                    String redirectPage = "restaurant.html";
                    if ("admin".equalsIgnoreCase(user.getRole())) {
                        redirectPage = "admin.html";
                    } else if ("restaurant".equalsIgnoreCase(user.getRole())) {
                        redirectPage = "restaurantowner.html";
                    }

                    resp = new ResponseMessage<>("success", "Login successful", redirectPage, user);
                } else {
                    resp = new ResponseMessage<>("error", "Invalid credentials");
                }

            } else if ("logout".equalsIgnoreCase(action)) {
                HttpSession session = request.getSession(false);
                if (session != null) {
                    session.invalidate();
                }
                resp = new ResponseMessage<>("success", "Logout successful", "login.html");

            } else {
                resp = new ResponseMessage<>("error", "Invalid action");
            }

        } catch (Exception e) {
            e.printStackTrace();
            resp = new ResponseMessage<>("error", "Server error: " + e.getMessage());
        }

        out.print(gson.toJson(resp));
        out.flush();
    }
}
```

---

## üéØ Explanation

* Added `"logout"` action to handle session invalidation.
* After logout, response sends `"login.html"` as the redirect page.
* You can call this endpoint from the front-end using AJAX or a simple button click.

---

## üí° Frontend Logout Example (Using jQuery + SweetAlert)

Place this **logout button** in your navbar or profile section (e.g., `restaurant.html`, `cart.html`, etc.):

```html
<button id="logoutBtn" class="bg-orange-500 px-4 py-2 rounded-lg text-white hover:bg-orange-600 transition">
  Logout
</button>
```

Then include this **JS script** (after jQuery and SweetAlert are loaded):

```javascript
$(document).ready(function() {
  $("#logoutBtn").click(function() {
    Swal.fire({
      title: "Logout Confirmation",
      text: "Are you sure you want to log out?",
      icon: "question",
      showCancelButton: true,
      confirmButtonColor: "#f97316",
      cancelButtonColor: "#6b7280",
      confirmButtonText: "Yes, Logout"
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: "http://localhost:8080/BiteBudddy/user",
          type: "POST",
          data: { action: "logout" },
          dataType: "json",
          success: function(res) {
            if (res.status === "success") {
              Swal.fire({
                icon: "success",
                title: "Logged out!",
                text: res.message,
                showConfirmButton: false,
                timer: 1500
              });
              setTimeout(() => {
                window.location.href = res.redirect;
              }, 1600);
            } else {
              Swal.fire("Error", res.message, "error");
            }
          },
          error: function() {
            Swal.fire("Error", "Server error during logout", "error");
          }
        });
      }
    });
  });
});
```

---

## ‚ú® Result

‚úÖ When the user clicks **Logout**,
‚Üí A SweetAlert confirmation appears.
‚Üí On confirm ‚Üí sends `action=logout` to backend.
‚Üí Backend invalidates session.
‚Üí Redirects to `login.html`.

---

Would you like me to make the **logout button design** match your existing ‚Äúrestaurant/cart/order‚Äù theme (dark glass + orange accent)? I can update the Tailwind button accordingly.