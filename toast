$(document).ready(function () {
  loadOrders();

  function loadOrders() {
    $.ajax({
      url: "http://localhost:8080/BiteBudddy/OrderHistoryServlet",
      method: "GET",
      success: function (res) {
        if (res.length === 0) {
          $("#ordersContainer").html(`<p class="text-center text-gray-400">No orders found.</p>`);
          return;
        }

        let html = "";
        res.forEach(order => {
          const items = order.items.map(i => `
            <li class="flex justify-between text-sm">
              <span>${i.itemName}</span>
              <span>x${i.quantity}</span>
            </li>
          `).join("");

          html += `
            <div class="bg-gray-900 rounded-2xl p-6 shadow-lg border border-gray-700">
              <div class="flex justify-between items-center">
                <div>
                  <p class="font-semibold text-orange-400">#${order.orderId}</p>
                  <p>${order.restaurantName}</p>
                  <p class="text-sm text-gray-400">${order.orderDate}</p>
                </div>
                <div class="text-right">
                  <p class="text-lg font-bold text-orange-300">₹${order.totalAmount.toFixed(2)}</p>
                  <p class="text-sm mt-1 ${statusColor(order.status)}">${order.status}</p>
                </div>
              </div>

              <ul class="mt-3 border-t border-gray-700 pt-3">${items}</ul>

              <div class="flex gap-4 mt-5">
                <button class="reorder bg-orange-500 px-4 py-2 rounded-lg hover:bg-orange-600" data-id="${order.orderId}">Reorder</button>
                <button class="delete bg-red-600 px-4 py-2 rounded-lg hover:bg-red-700" data-id="${order.orderId}">Delete</button>
              </div>
            </div>
          `;
        });
        $("#ordersContainer").html(html);
      },
      error: function () {
        alert("Error loading orders.");
      }
    });
  }

  function statusColor(status) {
    switch (status) {
      case "DELIVERED": return "text-green-400";
      case "PENDING": return "text-yellow-400";
      case "CANCELLED": return "text-red-400";
      default: return "text-gray-400";
    }
  }

  // Reorder button
  $(document).on("click", ".reorder", function () {
    const id = $(this).data("id");
     $.ajax({
  url: "http://localhost:8080/BiteBudddy/ReorderServlet",
  method: "POST",
  data: { orderId: id },
  success: function (res) {
    if (res.conflict) {
      if (confirm(res.message || "Cart has items from another restaurant. Replace?")) {
        $.ajax({
          url: "http://localhost:8080/BiteBudddy/ReorderServlet",
          method: "POST",
          data: { orderId: id, replace: true },
          success: function (r2) {
            alert(r2.success ? "Cart replaced and items added!" : "Failed to reorder");
            if (r2.success) window.location.href = "cart.html";
          }
        });
      }
    } else if (res.success) {
      alert("Items added to your cart!");
      window.location.href = "cart.html";
    } else {
      alert("Failed to reorder.");
    }
  }
});

  });





  // Delete order history
$(document).on("click", ".delete", function () {
  const id = $(this).data("id");
  if (confirm("Are you sure you want to delete this order history?")) {
    $.ajax({
      url: "http://localhost:8080/BiteBudddy/DeleteOrderServlet",
      method: "POST",
      data: { orderId: id },
      cache: false,
      success: function (res) {
        console.log("Delete response:", res);
        if (res.success || res === "true") {
          alert("Order deleted.");
          loadOrders(); // reload the updated list
        } else {
          alert("Failed to delete order.");
        }
      },
      error: function () {
        alert("Server error during delete.");
      }
    });
  }
});

});

instead of alart can we use roast



Perfect 😎 — using **SweetAlert2** will make your app feel **real-world level polished**, just like Zomato or Swiggy.
Let’s fully integrate **Toastify + SweetAlert2** for smooth, modern user interaction — no more ugly alerts or confirms!

---

## 🚀 Step 1: Include SweetAlert2 + Toastify

Add these in your `<head>` or before your custom JS file:

```html
<!-- SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Toastify -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
```

---

## 🚀 Step 2: Updated Full Script (Modern UI)

Replace your old script with this version 👇
(it has smooth toast messages + animated modals)

```js
$(document).ready(function () {
  loadOrders();

  // 🔔 Toast helper
  function toast(msg, color = "#ff7f50") {
    Toastify({
      text: msg,
      duration: 3000,
      close: true,
      gravity: "top",
      position: "right",
      backgroundColor: color,
      stopOnFocus: true
    }).showToast();
  }

  // 📦 Load order history
  function loadOrders() {
    $.ajax({
      url: "http://localhost:8080/BiteBudddy/OrderHistoryServlet",
      method: "GET",
      success: function (res) {
        if (res.length === 0) {
          $("#ordersContainer").html(`<p class="text-center text-gray-400">No orders found.</p>`);
          return;
        }

        let html = "";
        res.forEach(order => {
          const items = order.items.map(i => `
            <li class="flex justify-between text-sm">
              <span>${i.itemName}</span>
              <span>x${i.quantity}</span>
            </li>
          `).join("");

          html += `
            <div class="bg-gray-900 rounded-2xl p-6 shadow-lg border border-gray-700 hover:scale-[1.02] transition-transform">
              <div class="flex justify-between items-center">
                <div>
                  <p class="font-semibold text-orange-400">#${order.orderId}</p>
                  <p>${order.restaurantName}</p>
                  <p class="text-sm text-gray-400">${order.orderDate}</p>
                </div>
                <div class="text-right">
                  <p class="text-lg font-bold text-orange-300">₹${order.totalAmount.toFixed(2)}</p>
                  <p class="text-sm mt-1 ${statusColor(order.status)}">${order.status}</p>
                </div>
              </div>

              <ul class="mt-3 border-t border-gray-700 pt-3">${items}</ul>

              <div class="flex gap-4 mt-5">
                <button class="reorder bg-orange-500 px-4 py-2 rounded-lg hover:bg-orange-600 transition" data-id="${order.orderId}">
                  <i class="fa fa-redo"></i> Reorder
                </button>
                <button class="delete bg-red-600 px-4 py-2 rounded-lg hover:bg-red-700 transition" data-id="${order.orderId}">
                  <i class="fa fa-trash"></i> Delete
                </button>
              </div>
            </div>
          `;
        });
        $("#ordersContainer").html(html);
      },
      error: function () {
        toast("Error loading orders.", "#ff5252");
      }
    });
  }

  // 🎨 Status colors
  function statusColor(status) {
    switch (status) {
      case "DELIVERED": return "text-green-400";
      case "PENDING": return "text-yellow-400";
      case "CANCELLED": return "text-red-400";
      default: return "text-gray-400";
    }
  }

  // 🔁 Reorder functionality
  $(document).on("click", ".reorder", function () {
    const id = $(this).data("id");

    $.ajax({
      url: "http://localhost:8080/BiteBudddy/ReorderServlet",
      method: "POST",
      data: { orderId: id },
      success: function (res) {
        if (res.conflict) {
          Swal.fire({
            title: "Replace Existing Cart?",
            text: res.message || "Your cart has items from another restaurant. Replace it?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#ff7f50",
            cancelButtonColor: "#6b7280",
            confirmButtonText: "Yes, Replace!"
          }).then((result) => {
            if (result.isConfirmed) {
              $.ajax({
                url: "http://localhost:8080/BiteBudddy/ReorderServlet",
                method: "POST",
                data: { orderId: id, replace: true },
                success: function (r2) {
                  if (r2.success) {
                    toast("Cart replaced and items added!", "#4caf50");
                    window.location.href = "cart.html";
                  } else {
                    toast("Failed to reorder.", "#ff5252");
                  }
                }
              });
            }
          });
        } else if (res.success) {
          toast("Items added to your cart!", "#4caf50");
          window.location.href = "cart.html";
        } else {
          toast("Failed to reorder.", "#ff5252");
        }
      }
    });
  });

  // 🗑️ Delete order history (SweetAlert confirmation)
  $(document).on("click", ".delete", function () {
    const id = $(this).data("id");

    Swal.fire({
      title: "Delete Order?",
      text: "This action cannot be undone!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#ef4444",
      cancelButtonColor: "#6b7280",
      confirmButtonText: "Yes, Delete"
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: "http://localhost:8080/BiteBudddy/DeleteOrderServlet",
          method: "POST",
          data: { orderId: id },
          success: function (res) {
            if (res.success || res === "true") {
              toast("Order deleted successfully!", "#4caf50");
              loadOrders();
            } else {
              toast("Failed to delete order.", "#ff5252");
            }
          },
          error: function () {
            toast("Server error during delete.", "#ff5252");
          }
        });
      }
    });
  });
});
```

---

## ✨ What’s New

| Feature            | Old (alert/confirm)        | New (Modern UI)                    |
| ------------------ | -------------------------- | ---------------------------------- |
| Message popup      | `alert("Done!")`           | ✅ Toastify elegant message         |
| Confirmation popup | `confirm("Are you sure?")` | ✅ SweetAlert2 animated modal       |
| UI design          | Boring system popups       | 🎨 Smooth transitions, color-coded |
| User experience    | Blocking (stops code)      | Non-blocking, fluid & async        |
| Professional look  | ❌ No                       | ✅ Feels like Swiggy/Zomato         |

---

## 🎬 Example Behavior

* **Deleting an order** shows:
  🟠 “Are you sure you want to delete this order?”
  → If confirmed → ✅ Toast: “Order deleted successfully!”

* **Cart conflict** shows:
  🟡 SweetAlert “Replace Existing Cart?”
  → If confirmed → 🟢 Toast: “Cart replaced and items added!”

---

Would you like me to also show you how to **add a loading spinner** (like a small rotating loader during AJAX calls) — so users see something while waiting? It’ll make your UI feel even smoother.
