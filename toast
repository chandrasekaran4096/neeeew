$(document).ready(function () {
  loadOrders();

  function loadOrders() {
    $.ajax({
      url: "http://localhost:8080/BiteBudddy/OrderHistoryServlet",
      method: "GET",
      success: function (res) {
        if (res.length === 0) {
          $("#ordersContainer").html(`<p class="text-center text-gray-400">No orders found.</p>`);
          return;
        }

        let html = "";
        res.forEach(order => {
          const items = order.items.map(i => `
            <li class="flex justify-between text-sm">
              <span>${i.itemName}</span>
              <span>x${i.quantity}</span>
            </li>
          `).join("");

          html += `
            <div class="bg-gray-900 rounded-2xl p-6 shadow-lg border border-gray-700">
              <div class="flex justify-between items-center">
                <div>
                  <p class="font-semibold text-orange-400">#${order.orderId}</p>
                  <p>${order.restaurantName}</p>
                  <p class="text-sm text-gray-400">${order.orderDate}</p>
                </div>
                <div class="text-right">
                  <p class="text-lg font-bold text-orange-300">â‚¹${order.totalAmount.toFixed(2)}</p>
                  <p class="text-sm mt-1 ${statusColor(order.status)}">${order.status}</p>
                </div>
              </div>

              <ul class="mt-3 border-t border-gray-700 pt-3">${items}</ul>

              <div class="flex gap-4 mt-5">
                <button class="reorder bg-orange-500 px-4 py-2 rounded-lg hover:bg-orange-600" data-id="${order.orderId}">Reorder</button>
                <button class="delete bg-red-600 px-4 py-2 rounded-lg hover:bg-red-700" data-id="${order.orderId}">Delete</button>
              </div>
            </div>
          `;
        });
        $("#ordersContainer").html(html);
      },
      error: function () {
        alert("Error loading orders.");
      }
    });
  }

  function statusColor(status) {
    switch (status) {
      case "DELIVERED": return "text-green-400";
      case "PENDING": return "text-yellow-400";
      case "CANCELLED": return "text-red-400";
      default: return "text-gray-400";
    }
  }

  // Reorder button
  $(document).on("click", ".reorder", function () {
    const id = $(this).data("id");
     $.ajax({
  url: "http://localhost:8080/BiteBudddy/ReorderServlet",
  method: "POST",
  data: { orderId: id },
  success: function (res) {
    if (res.conflict) {
      if (confirm(res.message || "Cart has items from another restaurant. Replace?")) {
        $.ajax({
          url: "http://localhost:8080/BiteBudddy/ReorderServlet",
          method: "POST",
          data: { orderId: id, replace: true },
          success: function (r2) {
            alert(r2.success ? "Cart replaced and items added!" : "Failed to reorder");
            if (r2.success) window.location.href = "cart.html";
          }
        });
      }
    } else if (res.success) {
      alert("Items added to your cart!");
      window.location.href = "cart.html";
    } else {
      alert("Failed to reorder.");
    }
  }
});

  });





  // Delete order history
$(document).on("click", ".delete", function () {
  const id = $(this).data("id");
  if (confirm("Are you sure you want to delete this order history?")) {
    $.ajax({
      url: "http://localhost:8080/BiteBudddy/DeleteOrderServlet",
      method: "POST",
      data: { orderId: id },
      cache: false,
      success: function (res) {
        console.log("Delete response:", res);
        if (res.success || res === "true") {
          alert("Order deleted.");
          loadOrders(); // reload the updated list
        } else {
          alert("Failed to delete order.");
        }
      },
      error: function () {
        alert("Server error during delete.");
      }
    });
  }
});

});

instead of alart can we use toast
